use customerSeg;
SET sql_safe_updates = 0;

######### Data Cleaning ###################
# invoiceDate: clean column
delete from retail where year(invoiceDate) in (1,2,3,4,5,6,7,8,9);
delete from retail where year(invoiceDate) is null;

# Split timestamp and date in invoiceDate column
alter table retail add column PurchaseDate date as (substring_index(InvoiceDate, ' ' ,1));
alter table retail add column PurchaseHour text as (SUBSTRING_INDEX(InvoiceDate, ' ', -1));

# Keep cancelled orders so create new column that shows orderStatus to be completed or cancelled (invoice = 0 | quantity = -#)
alter table retail add orderStatus text;
update retail set orderStatus = if(invoice = 0 and Quanity < 0, "Cancelled", "Completed");

# Drop StockCode/Invoice
alter table retail drop column StockCode;
alter table retail drop column Invoice;
alter table retail drop column stockcode;

###########################################
######## SQL Analysis Questions ###########
# 1. What is the total revenue generated by the online retail store during the dataset period?
select round(sum(Price),2) as Total_Revenue, year(PurchaseDate) as year from retail
where orderStatus = "Completed" group by year(PurchaseDate) order by year(PurchaseDate);

# 2. What is the average order value (AOV) for the online retail store?
select round(sum(Price) / count(*),2) as Average_Order_Value from retail where orderStatus = "Completed";

# 3. Which country has the highest number of customers?
select Country, count(CustomerID) as Amount_Of_Customers from retail group by Country order by count(CustomerID) desc; 

# 4. What are the top 5 best-selling products?
select Description, round((Quanity * Price),2) as Unit_Price from retail where orderStatus = "Completed"
group by Description order by (Quanity * Price) desc limit 5; 

# 5. How many unique customers made purchases during the dataset period?
select count(distinct CustomerID) as Amount_of_Customers from retail where orderStatus = 'Completed';

# 6. What is the distribution of customers based on their purchase frequency (e.g., daily, weekly, monthly)? 
select month(PurchaseDate) as Month, year(PurchaseDate) as Year,(month(PurchaseDate) / count(distinct CustomerID)) as Purchase_Frequency
from retail where orderStatus = "Completed" and year(PurchaseDate) = 2012 group by month(PurchaseDate),year(PurchaseDate) order by month(PurchaseDate);

# 6B (2011)
select month(PurchaseDate) as Month, year(PurchaseDate) as Year,(month(PurchaseDate) / count(distinct CustomerID)) as Purchase_Frequency
from retail where orderStatus = "Completed" group by month(PurchaseDate),year(PurchaseDate) order by month(PurchaseDate);

# 6C (2010)
select month(PurchaseDate) as Month, year(PurchaseDate) as Year,(month(PurchaseDate) / count(distinct CustomerID)) as Purchase_Frequency
from retail where orderStatus = "Completed" and year(PurchaseDate) = 2010 group by month(PurchaseDate),year(PurchaseDate) order by month(PurchaseDate);

# 7. How many customers have not made a purchase in the last 3 months?
select month(PurchaseDate) as Month, year(PurchaseDate) as year,count(CustomerID) as No_Purchase_Customers from retail 
where orderStatus = "Cancelled" and month(PurchaseDate) in (10,11,12)
group by month(PurchaseDate), year(PurchaseDate);

# 8. What is the average number of days between purchases for each customer?
SELECT
    CustomerID,
    round(AVG(DATEDIFF(PurchaseDate, lag_purchase_date)),2) AS avg_days_between_purchases
FROM
    (SELECT
        CustomerID,
        PurchaseDate,
        LAG(PurchaseDate) OVER (PARTITION BY CustomerID ORDER BY PurchaseDate) AS lag_purchase_date
    FROM
        retail) AS lagged_sales
WHERE
    lag_purchase_date IS NOT NULL
GROUP BY
    CustomerID;

# 9.What is the total quantity sold for each product category? 3556 -> 537 products sold
select Description, sum(Quanity) from retail where orderStatus = "Completed" and Quanity >= 100
group by Description order by sum(Quanity) desc;




